def Pack(Closure closure) {
    closure.delegate = dependencies
    return closure
}

ext {

    dagger = Pack {
        implementation deps.dagger.hilt
        kapt deps.dagger.compiler
    }

    dagger_vm = Pack {
        implementation deps.dagger.viewmodel
        kapt deps.dagger.vm_compiler
    }

    libraries = Pack {
        implementation deps.libs
    }

    kotlin = Pack {
        implementation deps.kotlin.lib
        implementation deps.kotlin.ktx
        implementation deps.kotlin.coroutines
    }

    view = Pack {
        implementation deps.support.compat
        implementation deps.support.app
        implementation deps.support.cardView
        implementation deps.support.recyclerView
        implementation deps.support.design
        implementation deps.support.material
        implementation deps.support.constraint
        implementation deps.support.glide
    }

    testing = Pack {
        implementation deps.testing.junit
        implementation deps.testing.junitImplementation
        implementation deps.testing.espresso
    }

    network = Pack {
        implementation deps.network.retrofit
        implementation deps.network.converter
        implementation deps.network.interceptor
        implementation deps.network.callback
    }

    lifecycle = Pack {
        implementation deps.lifecycle.viewmodel
        implementation deps.lifecycle.livedata
        implementation deps.lifecycle.scope
    }


}